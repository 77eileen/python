# 클래스 생성 : 기본 형태
class MyData():
    def __init__(self):
        pass

# 클래스 객체 생성
m1 = MyData()

# 객체를 사용
# m1. 인스턴스 변수
# m2. 메소드



# 🔎 붕어빵 비유로 이해하는 클래스

# 클래스(Class) = 붕어빵 틀 (설계도)
# 객체(Object) = 틀로 찍어낸 붕어빵 (실체)
# 인스턴스(Instance) = “특정 클래스에서 찍어낸 붕어빵”이라는 점을 강조할 때 쓰는 말
# → 즉, “객체”와 거의 같지만, 클래스와의 관계를 강조

# 📌 변수 비유
# 클래스 변수 = 틀 자체에 새겨진 공통 무늬
# → 모든 붕어빵이 공유 (예: 꼬리 모양)
# 인스턴스 변수 = 붕어빵 속에 들어가는 앙금(팥, 슈크림, 초코)
# → 붕어빵마다 다를 수 있음

# 📌 메서드 비유
# 생성자 메서드(__init__)
# → 붕어빵이 찍혀 나올 때 자동으로 “앙금 넣기 + 구워내기” 과정을 하는 것

# 인스턴스 메서드
# → 각각의 붕어빵이 할 수 있는 행동 (예: “나는 팥붕이야!” 라고 소개)
# → 특정 붕어빵(객체)에 대해 실행

# 클래스 메서드 (@classmethod)
# → 틀 전체(클래스)에 작용하는 동작 (예: “지금까지 붕어빵 몇 개 찍었어?” 라고 알려줌)

# 정적 메서드 (@staticmethod)
# → 틀과 붕어빵과 상관없이 도우를 반죽하는 일반적인 도구 같은 것
# (예: “반죽은 밀가루+물로 만든다” → 붕어빵 개별 상태랑 무관)